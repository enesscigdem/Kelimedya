@using System.Security.Claims
@{
    bool embed = Context.Request.Query.ContainsKey("embed");
    string singleWord = Context.Request.Query["word"];
    string wordId = Context.Request.Query["id"];
    Layout = embed 
      ? "~/Areas/Student/Views/Shared/_GameLayout.cshtml" 
      : "~/Areas/Student/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Boşluk Doldurma";
    var studentId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}
<link href="~/css/FillBlanks.css" rel="stylesheet" />

<div id="gameRoot" class="gb-container container-xl"
     data-student-id="@studentId"
     data-game-id="@ViewData["GameId"]"
     data-word="@singleWord"
     data-word-id="@wordId"
     data-embed="@embed.ToString().ToLower()">
  
  <header class="gb-header">
    <h2>Boşluk Doldurma Oyunu</h2>
    <div class="gb-progress">
      <div class="gb-progress-bar" 
           style="width: calc( (var(--gb-current) / var(--gb-total)) * 100% );">
      </div>
    </div>
  </header>

  <div class="gb-gamecard">
    <div class="gb-sentence" id="fbSentence">
      <!-- JS ile <span>…<input class="gb-input">…</span> şeklinde doldurulacak -->
    </div>

    <div class="gb-controls">
      <button id="fbCheck"  class="btn-primary">Kontrol Et</button>
      <button id="fbReveal" class="btn-outline">Cevabı Göster</button>
      @if(!embed)
      {
        <button id="fbNext" class="btn-secondary">Sonraki</button>
      }
    </div>

    <div class="gb-feedback" id="fbFeedback"></div>
  </div>
</div>

@section Scripts {
<script type="module">
import {initFillBlanks} from '@Url.Content("~/js/games/FillBlanks.js")';
const root = document.getElementById('gameRoot');
initFillBlanks(
  root.dataset.studentId,
  root.dataset.gameId,
  root.dataset.word,
  root.dataset.wordId,
  // progress yönetmek için parent’da güncelle:
  (current,total) => {
    root.style.setProperty('--gb-current', current);
    root.style.setProperty('--gb-total', total);
  }
);
</script>
}
