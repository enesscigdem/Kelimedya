@model IEnumerable<Kelimedya.WebApp.Areas.Admin.Models.WordCardViewModel>

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Kelime Kartları";
}

<div class="page-header d-print-none">
    <div class="container-xl">
        <div class="row align-items-center">
            <div class="col">
                <h2 class="page-title">Kelime Kartları</h2>
                <div class="text-muted mt-1">
                    Seçtiğiniz ders için oluşturulan kelime kartlarını görüntüleyip düzenleyebilirsiniz.
                </div>
            </div>
        </div>
    </div>
</div>


<div class="page-body pt-1">
    <div class="container-xl">
        <div class="row mb-3 align-items-center">
            <div class="col-12 col-lg-4">
                <input type="text" id="searchInput" class="form-control" placeholder="Kelime kartı ara..." />
            </div>
            <div class="col-12 col-lg-8 text-end">
                <select id="sortSelect" class="form-select d-inline-block w-auto">
                    <option value="">-- Sıralama Seçeneği --</option>
                    <option value="wordAsc">Kelime (A - Z)</option>
                    <option value="wordDesc">Kelime (Z - A)</option>
                    <option value="definitionAsc">Tanım (A - Z)</option>
                    <option value="definitionDesc">Tanım (Z - A)</option>
                </select>
            </div>
        </div>
    </div>
</div>

<div class="page-body pt-2">
    <div class="container-xl">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Kelime Kartları Listesi</h3>
            </div>
            <div class="table-responsive">
                <table class="table card-table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Kelime</th>
                            <th>Tanım</th>
                            <th>Örnek Cümle</th>
                            <th>Resim</th>
                            <th class="w-1 text-end">İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var card in Model)
                        {
                            <tr>
                                <td>@card.Word</td>
                                <td>@card.Definition</td>
                                <td>@card.ExampleSentence</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(card.ImageUrl))
                                    {
                                        <img src="@card.ImageUrl" alt="WordCard Image" style="max-height:50px;" />
                                    }
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@card.Id"
                                            class="btn btn-success me-1 d-flex align-items-center"
                                            title="Düzenle">Düzenle</a>
                                        <a asp-action="Delete" asp-route-id="@card.Id"
                                            class="btn btn-danger d-flex align-items-center delete-btn" title="Sil">Sil</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Arama: input'a yazıldıkça tabloyu filtrele
            $("#searchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("table tbody tr").filter(function () {
                    var wordText = $(this).find("td:first").text().toLowerCase();
                    var definitionText = $(this).find("td:eq(1)").text().toLowerCase();
                    var exampleText = $(this).find("td:eq(2)").text().toLowerCase();
                    $(this).toggle(wordText.indexOf(value) > -1 ||
                        definitionText.indexOf(value) > -1 ||
                        exampleText.indexOf(value) > -1);
                });
            });

            // Sıralama: seçilen seçeneklere göre tabloyu sıralayın
            $("#sortSelect").on("change", function () {
                var option = $(this).val();
                var rows = $("table tbody tr").get();

                rows.sort(function (a, b) {
                    var wordA = $(a).find("td:first").text().toUpperCase();
                    var wordB = $(b).find("td:first").text().toUpperCase();
                    var definitionA = $(a).find("td:eq(1)").text().toUpperCase();
                    var definitionB = $(b).find("td:eq(1)").text().toUpperCase();

                    switch (option) {
                        case "wordAsc":
                            return (wordA < wordB) ? -1 : (wordA > wordB) ? 1 : 0;
                        case "wordDesc":
                            return (wordA > wordB) ? -1 : (wordA < wordB) ? 1 : 0;
                        case "definitionAsc":
                            return (definitionA < definitionB) ? -1 : (definitionA > definitionB) ? 1 : 0;
                        case "definitionDesc":
                            return (definitionA > definitionB) ? -1 : (definitionA < definitionB) ? 1 : 0;
                        default:
                            return 0;
                    }
                });

                $.each(rows, function (index, row) {
                    $("table tbody").append(row);
                });
            });
        });
    </script>
}
