@using System.Security.Claims
@{
    bool embed = Context.Request.Query.ContainsKey("embed");
    string singleWord = Context.Request.Query["word"];
    string wordId = Context.Request.Query["id"];
    Layout = embed 
        ? "~/Areas/Student/Views/Shared/_GameLayout.cshtml" 
        : "~/Areas/Student/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Kelime Bulmaca";
    var studentId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}
<link href="~/css/KelimeBulmaca.css" rel="stylesheet"/>

<div id="gameRoot" class="gb-container container-xl"
     data-student-id="@studentId"
     data-game-id="@ViewData["GameId"]"
     data-word="@singleWord"
     data-word-id="@wordId"
     data-embed="@embed.ToString().ToLower()">

    <header class="gb-header">
        <h2>Kelime Bulmaca Oyunu</h2>
        <div class="gb-progress"><div class="gb-progress-bar" style="width:100%"></div></div>
        <p class="gb-subtitle">Doğru seçeneği tıklayın.</p>
    </header>

    <div class="gb-gamecard">
        <div class="question-box" id="questionBox">
            Soru burada görünecek...
        </div>

        <div id="optionsArea" class="options-area">
            <!-- JS ile dört <button class="btn-outline">…</button> oluşturulacak -->
        </div>

        <div class="gb-feedback" id="kbFeedback"></div>

        @if(!embed)
        {
            <div class="gb-controls" style="margin-top:1.5rem;">
                <button id="kbEndGame" class="btn-secondary"
                        data-home="@Url.Action("Index","Games", new {area="Student"})">
                    Oyunu Sonlandır
                </button>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script type="module">
    import {initWordQuiz} from '@Url.Content("~/js/games/KelimeBulmaca.js")';
    const root = document.getElementById('gameRoot');
    initWordQuiz(
      root.dataset.studentId,
      root.dataset.gameId,
      root.dataset.word,
      root.dataset.wordId
    );
  </script>
}