name: Auto Merge and Analyze

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analyze-and-approve:
    name: Analyze and Approve Pull Request
    runs-on: ubuntu-latest

    steps:
      # 1. Repo'yu klonla
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. .NET ve SonarQube için gerekli ortamı kur
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      # 3. SonarQube tarayıcıyı çalıştır
      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Start SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin \
            /k:"enesscigdem_Paragraph" \
            /o:"enesscigdem" \
            /d:sonar.login=${{ secrets.SONAR_TOKEN }} \
            /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release
          dotnet-sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}

      # 4. Otomatik PR onayla
      - name: Approve Pull Request
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # 5. PR'yi otomatik olarak birleştir
      - name: Auto Merge
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            if (pullRequest.mergeable && pullRequest.mergeable_state === 'clean') {
              await github.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pullRequest.number,
                commit_title: `Merging PR #${pullRequest.number}: ${pullRequest.title}`,
                merge_method: 'squash'
              });
            } else {
              core.setFailed('Pull request is not mergeable.');
            }