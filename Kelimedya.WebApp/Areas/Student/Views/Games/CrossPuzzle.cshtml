@using System.Security.Claims
@{
    bool popUp = Context.Request.Query.ContainsKey("popUp");
    Layout = popUp
        ? "~/Areas/Student/Views/Shared/_GameLayout.cshtml"
        : "~/Areas/Student/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Çengel Bulmaca";
    var studentId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    string lessonId = Context.Request.Query["lessonId"];
    int.TryParse(Context.Request.Query["batch"], out var batch);
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
      :root{
        --brand:      #f97316; /* orange-500 */
        --brand-600:  #ea580c; /* orange-600 */
        --amber-100:  #fef3c7;
        --amber-200:  #fde68a;
        --amber-300:  #fcd34d;
        --chip-border:#fed7aa;
      }
      
      /* === TAHTA / GRID === */
      #puzzleGrid{
        display:grid;
        gap:2px;                 /* hücre aralığı */
        position:relative;
      }
      
      .cp-wrap{
        position:relative;
        width:30px;              /* hücre genişliği */
        height:30px;             /* hücre yüksekliği */
      }
      
      .cp-cell{
        width:100%;
        height:100%;
        text-align:center;
        text-transform:uppercase;
        font-weight:700;
        font-size:13px;
        letter-spacing:.5px;
        color:var(--brand-600);
        background:#fff;
        border:1px solid var(--chip-border);
        border-radius:8px;
        transition:border-color .15s, box-shadow .15s, background .15s, transform .05s;
        caret-color: var(--brand-600);
      }
      
      .cp-cell:focus{
        outline:none;
        box-shadow:0 0 0 3px rgba(249,115,22,.18);
        border-color:#f59e0b;
      }
      
     /* BLOKLU kareler şeffaf değil, çok açık krem görünsün */
     .cp-cell.blocked{
       background: #fff7ed;        /* amber-50 */
       border-color: #f5d5a3;      /* yumuşak kenar */
       color: transparent;
     }
     
     /* Yazılabilir kareler (net beyaz) */
     .cp-cell:not(.blocked){
       background: #ffffff;
       border-color: #fdba74;
       box-shadow: 0 1px 0 rgba(0,0,0,.03);
     }
     
     /* Izgara çizgileri biraz daha belirgin olsun */
     .board-pattern{
       background-image:
         linear-gradient(#e5e7eb 1px, transparent 1px),
         linear-gradient(90deg, #e5e7eb 1px, transparent 1px);
       background-size: 32px 32px; /* 30px hücre + 2px gap */
     }

      
      .cp-cell.wrong{
        background:#fee2e2;
        border-color:#fca5a5;
      }
      
      /* Kare numarası rozeti */
      .cp-num{
        position:absolute;
        top:0; left:0;
        z-index:10;
        font-size:10px;
        font-weight:800;
        color:var(--brand-600);
        background:#fff;
        border:1px solid var(--chip-border);
        border-radius:.5rem;
        padding:0 6px;
        transform: translate(-4px,-6px);
        box-shadow:0 1px 0 rgba(0,0,0,.05);
        pointer-events:none;
      }
      
      /* Dış kabuk */
      .board-shell{
        background: linear-gradient(180deg, rgba(255,237,213,.8), rgba(254,243,199,.65));
        border: 1px solid #fdba74;
        box-shadow: inset 0 -10px 40px rgba(0,0,0,.05);
        border-radius: 1rem;
      }
      
      /* Tahta yüzeyi – koyu yerine açık pastel */
      .board-surface{
        background: linear-gradient(180deg,#fff7ed,#fffbeb); /* amber-50 → amber-25 */
        border: 1px solid var(--amber-200);
        border-radius: 1rem;
      }
      
      /* İnce ızgara deseni (hücre+gap'e yakın ölçü) */
      .board-pattern{
        background-image:
          linear-gradient(#f3f4f6 1px,transparent 1px),
          linear-gradient(90deg,#f3f4f6 1px,transparent 1px);
        background-size: 32px 32px; /* 30px hücre + 2px gap */
        border-radius: 1rem;
      }
      
      /* === İPUÇLARI / YAN PANEL === */
      .clues-list{
        max-height:520px;
        overflow:auto;
        padding-right:.25rem;
      }
      
      .clue-item{
        display:flex;
        gap:.5rem;
        align-items:flex-start;
        background:linear-gradient(180deg,rgba(255,255,255,.75),rgba(255,255,255,.65));
        border:1px solid rgba(253,186,116,.5);
        padding:.6rem .7rem;
        border-radius:12px;
        transition:transform .12s, box-shadow .12s, background .12s;
      }
      
      .clue-item:hover{
        transform:translateY(-1px);
        box-shadow:0 6px 14px rgba(0,0,0,.06);
      }
      
      .clue-num{
        min-width:26px;
        height:26px;
        border-radius:8px;
        display:flex;
        align-items:center;
        justify-content:center;
        background:linear-gradient(135deg,var(--brand),var(--brand-600));
        color:#fff;
        font-size:.75rem;
        font-weight:800;
      }
      
      .clue-text{
        color:#7c2d12;
        font-size:.9rem;
        line-height:1.25rem;
      }
      
      /* Scrollbar (opsiyonel, modern tarayıcılar) */
      .clues-list::-webkit-scrollbar{ width:8px; }
      .clues-list::-webkit-scrollbar-thumb{
        background:#e5e7eb;
        border-radius:8px;
      }
      .clues-list:hover::-webkit-scrollbar-thumb{
        background:#d1d5db;
      }

    </style>
</head>

<body>
<div class="relative min-h-screen bg-gradient-to-br from-orange-50 via-white to-yellow-50">
  <!-- hafif arka plan spotları -->
  <div class="absolute inset-0 -z-10 [background:radial-gradient(600px_200px_at_20%_0%,rgba(253,186,116,.25),transparent_60%),radial-gradient(600px_200px_at_100%_20%,rgba(254,240,138,.25),transparent_60%)]"></div>

  <div id="gameRoot" class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8"
         data-student-id="@studentId"
         data-game-id="@ViewData["GameId"]"
         data-lesson-id="@lessonId"
         data-batch="@batch"
         data-embed="@popUp.ToString().ToLower()">
    @if (!popUp)
    {
      <header class="text-center mb-8">
        <h1 class="mt-4 text-4xl font-extrabold tracking-tight text-orange-600">Çengel Bulmaca</h1>
        <p class="mt-2 text-gray-600">Yatay ve dikey kelimeleri doldurarak bulmacayı tamamlayın.</p>

        <!-- üst chip'ler -->
        <div class="mt-5 flex items-center justify-center gap-3 flex-wrap">
          <div class="px-3 py-1.5 rounded-xl bg-white border border-orange-100 text-sm text-orange-700 shadow-sm">
            <i class="fa-regular fa-square text-orange-500 mr-1"></i><span id="cpSizeChip">Boyut: —</span>
          </div>
          <div class="px-3 py-1.5 rounded-xl bg-white border border-orange-100 text-sm text-orange-700 shadow-sm">
            <i class="fa-solid fa-layer-group text-orange-500 mr-1"></i><span id="cpWordsChip">Kelimeler: —</span>
          </div>
          <div class="px-3 py-1.5 rounded-xl bg-white border border-orange-100 text-sm text-orange-700 shadow-sm">
            <i class="fa-regular fa-lightbulb text-orange-500 mr-1"></i> <span id="cpHintsChip">İpucu: Yatay/ Dikey</span>
          </div>
        </div>
      </header>
    }

    <div class="bg-white/80 backdrop-blur-lg rounded-3xl shadow-2xl border border-orange-100 p-6 md:p-8">
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- SOL: TAHTA -->
        <div class="lg:col-span-2">
          <div class="board-shell rounded-2xl p-4 md:p-6 overflow-auto">
            <div class="board-surface rounded-2xl shadow-inner p-3 md:p-4 overflow-auto">
              <div id="puzzleGrid" class="inline-block"></div>
            </div>
          </div>
        </div>

        <!-- SAĞ: İPUÇLARI + AKSİYON -->
        <div class="space-y-6 lg:sticky lg:top-8 self-start">
          <div class="rounded-2xl border border-orange-200 bg-gradient-to-br from-orange-50 to-orange-100 p-5">
            <h3 class="text-lg font-bold text-orange-800 mb-3 flex items-center gap-2">
              <i class="fas fa-arrow-right"></i> Yatay
            </h3>
            <ul id="across-clues" class="clues-list space-y-2"></ul>
          </div>

          <div class="rounded-2xl border border-yellow-200 bg-gradient-to-br from-yellow-50 to-yellow-100 p-5">
            <h3 class="text-lg font-bold text-yellow-800 mb-3 flex items-center gap-2">
              <i class="fas fa-arrow-down"></i> Dikey
            </h3>
            <ul id="down-clues" class="clues-list space-y-2"></ul>
          </div>

          <div class="grid grid-cols-1 gap-3">
            <button id="cpCheck" class="w-full bg-gradient-to-r from-orange-500 to-orange-600 text-white py-3 rounded-xl font-bold shadow-lg hover:shadow-xl transition-all hover:scale-[1.015]">
              Kontrol Et
            </button>
            <button id="cpReveal" class="w-full bg-gradient-to-r from-slate-500 to-slate-600 text-white py-3 rounded-xl font-bold shadow-lg hover:shadow-xl transition-all hover:scale-[1.015]">
              Cevabı Göster
            </button>
            <button id="cpBack" class="w-full border border-slate-200 bg-white text-slate-700 py-3 rounded-xl font-bold shadow-sm hover:shadow transition">
              Geri Dön
            </button>
          </div>
        </div>
      </div>

      <div id="cpFeedback" class="mt-8 text-center text-xl font-extrabold text-orange-700"></div>
    </div>
  </div>
</div>

@section Scripts {
<script type="module">
  import { initCrossPuzzle } from '@Url.Content("~/js/games/CrossPuzzle.js")';
  const root = document.getElementById('gameRoot');
  const qs = new URLSearchParams(window.location.search);
  const batch = Number(qs.get('batch') || 0);
  initCrossPuzzle(root.dataset.studentId, root.dataset.gameId, root.dataset.lessonId, batch);

    window.__updatePuzzleChips = function(size, acrossCount, downCount){
      const sizeEl = document.getElementById('cpSizeChip');
      const wordsEl = document.getElementById('cpWordsChip');
      const hintsEl = document.getElementById('cpHintsChip');
      if(sizeEl) sizeEl.textContent = `Boyut: ${size}×${size}`;
      if(wordsEl) wordsEl.textContent = `Kelimeler: ${acrossCount + downCount}`;
      if(hintsEl) hintsEl.textContent = `İpucu: Yatay ${acrossCount} • Dikey ${downCount}`;
    };
  </script>
}
</body>
</html>
